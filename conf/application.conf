
play.application.loader = ntile.config.NtileApplicationLoader

play.http.secret.key = "myfuckingsecretkeyishere"

play.akka.actor-system = "mongo-actors"

mongodb.uri = "mongodb://localhost:27017/protontile"

kafka.uri = "localhost:9092"

https.port = 9443

oidc {
  discoveryUri = "https://dev-152274.oktapreview.com/oauth2/default/.well-known/openid-configuration"
  clientId = "0oade594ckGWINhlP0h7"
  clientSecret = "BJCGtXQSHSoSpVFJVJdxtYhpYDI42Jd46cJj26LS"
}

mongo-async-driver {
  akka {
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    loglevel = DEBUG
  }
}

play.cache.redis {
  host: localhost
  # redis server: port
  port: 6379
}

play.http.errorHandler = "ntile.config.CustomErrorHandler"

baseUrl = "http://localhost:9000"

//play.modules.enabled += "ntile.controllers.GuiceControllersModule"

play.server {

  provider = "play.core.server.AkkaHttpServerProvider"

  akka {
    bindTimeout = 5 seconds

    requestTimeout = null

    idle-timeout = 6 hours

    transparent-head-requests = off

    default-host-header = ""


    #server-header = null
    server-header = ${?play.server.server-header}


    illegal-response-header-value-processing-mode = warn


    max-content-length = infinite

    tls-session-info-header = off
  }
}


akka {

  loglevel = "DEBUG"

  actor {

    default-dispatcher {
      fork-join-executor {

        parallelism-min = 4

        # The parallelism factor is used to determine thread pool size using the
        # following formula: ceil(available processors * factor). Resulting size
        # is then bounded by the parallelism-min and parallelism-max values.
        parallelism-factor = 3.0

        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 32

        # Setting to "FIFO" to use queue like peeking mode which "poll" or "LIFO" to use stack
        # like peeking mode which "pop".
        task-peeking-mode = "FIFO"
      }
    }
  }
}

play.server.akka.http2 {
  enabled = true
  enabled = ${?http2.enabled}
}


